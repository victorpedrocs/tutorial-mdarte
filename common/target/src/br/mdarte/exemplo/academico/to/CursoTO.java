// license-header java merge-point
// Attention: Generated code! Do not modify by hand!
// Generated by: TransferObject.vsl in andromda-hibernate-cartridge.

package br.mdarte.exemplo.academico.to;
import br.ufrj.coppetec.to.AbstractTOExample;
import br.ufrj.coppetec.to.AbstractTO;

/**
 * 
 */
public abstract class CursoTO extends
	AbstractTO implements java.io.Serializable, br.mdarte.exemplo.academico.cd.Curso
{

    private static final long serialVersionUID = -6495172144479822107L;

    public CursoTO()
    {
    }

    /**
     * Version property managed by Hibernate.
     */
    private int hibernate_version;

    public int getHibernate_version()
    {
        return this.hibernate_version;
    }

    public void setHibernate_version (int hibernate_version)
    {
        this.hibernate_version = hibernate_version;
        setUpdated();
    }    

    private Boolean updated = false;

    public Boolean isUpdated(){
    	return updated ;
    }
    
    private void setUpdated(){
		if(!isInitializing()) updated = true;
    }	
  
    private Boolean initializing = false;  
    
    public void beginInitialization(){
    	this.initializing = true;
    }
    
    public void finishInitialization(){
    	this.initializing = false;
    }
    
    public Boolean isInitializing(){
    	return this.initializing;
    }
	private CursoTOExample exemploTO;
    
	public CursoTOExample getExemploTO() {
		return exemploTO;
	}

	public void setExemploTO(AbstractTOExample exemploTO) {
		this.exemploTO = (CursoTOExample)exemploTO;
	}


    private java.lang.String codigo;

    /**
     * 
     */
    public java.lang.String getCodigo()
    {
        return this.codigo;
    }

    public void setCodigo(java.lang.String codigo)
    {
        this.codigo = codigo;
        setUpdated();
    }
    private java.lang.String nome;

    /**
     * 
     */
    public java.lang.String getNome()
    {
        return this.nome;
    }

    public void setNome(java.lang.String nome)
    {
        this.nome = nome;
        setUpdated();
    }
    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
        if(id == null) setExemploTO(null);
        setUpdated();
    }

    private java.util.Collection estudantes = new java.util.ArrayList();

    /**
     * Get the estudantes
     * 
     */
    public java.util.Collection getEstudantes()
    {
    	boolean podeRecuperar = false;
    	if(this.exemploTO != null){
    		if(exemploTO.getEstudantes() != null && !exemploTO.getEstudantes().isEmpty()){
    			podeRecuperar = true;
    		}
    	}else{
    		podeRecuperar = true;
    	}
        if(podeRecuperar)
        	return this.estudantes;
        else
        	throw new RuntimeException("recuperacao.nao.permitida");
    }

    /**
     * Set the estudantes
     */
    public void setEstudantes(java.util.Collection estudantes)
    {
    	boolean podeAtualizar = false;
    	if(this.exemploTO != null){
    		if(exemploTO.getEstudantes() != null && !exemploTO.getEstudantes().isEmpty()){
    			podeAtualizar = true;
    		}
    	}else{
    		podeAtualizar = true;
    	}
        if(podeAtualizar){
        	this.estudantes = (java.util.Collection)estudantes;
        	setUpdated();
        }else
        	throw new RuntimeException("atualizacao.nao.permitida");            
    }


    


    public void setEstudantesInverse(java.util.Collection estudantes) 
    {
    	java.util.Collection temp = (java.util.Collection)this.estudantes;
		this.estudantes = (java.util.Collection)estudantes;

	
    	if(temp != null){
    		for(java.util.Iterator it = temp.iterator();it.hasNext();){	
    			br.mdarte.exemplo.academico.to.EstudanteTO estudanteNext = (br.mdarte.exemplo.academico.to.EstudanteTO)it.next();
    			estudanteNext.setCurso(null);
    		}
    	}
    	
    	if(estudantes != null){
    		for(java.util.Iterator it = estudantes.iterator();it.hasNext();){
    			br.mdarte.exemplo.academico.to.EstudanteTO estudanteNext = (br.mdarte.exemplo.academico.to.EstudanteTO)it.next();
    			estudanteNext.setCurso(this);
        	}
        }
	
    }


    public void addEstudantes(br.mdarte.exemplo.academico.cd.Estudante estudanteTemp)  {
		if(estudantes == null)
			setEstudantes(new java.util.ArrayList());
		
		if(!estudantes.contains(estudanteTemp))
			estudantes.add(estudanteTemp);
		
		estudanteTemp.setCurso(this);
    	this.setEstudantes(estudantes);
    }

    public void removeEstudantes(br.mdarte.exemplo.academico.cd.Estudante estudanteTemp)  {
    	java.util.Collection estudantes = this.getEstudantes();
		
		if(estudantes != null){
    		estudantes.remove(estudanteTemp);
		}
		
		estudanteTemp.setCurso(null);

    	this.setEstudantes(estudantes);
    }



	public String getEntityClassName(){
		return "br.mdarte.exemplo.academico.cd.CursoImpl";
	}

	public br.ufrj.coppetec.Entity getInstance(){
		return new CursoTOImpl();
	}

    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof CursoTO))
        {
            return false;
        }
        final CursoTO that = (CursoTO)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    public int hashCode(){
		int hashCode = super.hashCode();
		hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());
		return hashCode;
    }


	public boolean instanceOf(Class<?> otherClass) {
		return otherClass.isAssignableFrom(getCursoClass());
	}

	public Class<?> getCursoClass() {
		return CursoTOImpl.class;
	}
}